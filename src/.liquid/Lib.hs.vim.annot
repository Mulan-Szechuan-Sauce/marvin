1:1-1:1::Lib.$trModule :: "GHC.Types.Module"
29:1-29:18::Lib.readTokenFromFile :: "[GHC.Types.Char] -> (GHC.Types.IO Data.Text.Internal.Text)"
29:19-29:23::path :: "[GHC.Types.Char]"
29:31-29:92::lq_anf$##7205759403792857828 :: "Data.Text.Internal.Text"
32:1-32:13::Lib.bootstrapBot :: "(GHC.Types.IO ())"
33:3-33:8::token :: "Data.Text.Internal.Text"
33:12-33:41::_ :: "(GHC.Types.IO Data.Text.Internal.Text)"
33:30-33:41::lq_anf$##7205759403792858827 :: "[GHC.Types.Char]"
34:3-34:18::userFacingError :: "Data.Text.Internal.Text"
34:22-34:32::Discord.runDiscord :: "Discord.RunDiscordOpts -> (GHC.Types.IO Data.Text.Internal.Text)"
34:35-34:38::lq_anf$##7205759403792858828 :: "Discord.RunDiscordOpts"
34:56-34:61::token :: "{v : Data.Text.Internal.Text | v == token}"
35:58-35:70::Lib.eventHandler :: "Discord.Internal.Types.Events.Event -> (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO ())"
36:3-36:31::_ :: "(GHC.Types.IO ())"
36:16-36:31::userFacingError :: "{v : Data.Text.Internal.Text | v == userFacingError}"
39:1-39:13::Lib.eventHandler :: "Discord.Internal.Types.Events.Event -> (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO ())"
39:14-39:19::event :: "Discord.Internal.Types.Events.Event"
39:27-39:32::_ :: "{v : Discord.Internal.Types.Events.Event | v == event}"
40:22-40:44::lq_anf$##7205759403792858770 :: "(Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO ()) -> (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO ())"
40:27-40:44::lq_anf$##7205759403792858769 :: "GHC.Types.Bool"
40:32-40:43::lq_anf$##7205759403792858768 :: "GHC.Types.Bool"
40:41-40:42::m :: "{v : Discord.Internal.Types.Channel.Message | v == m}"
40:47-40:62::lq_anf$##7205759403792858771 :: "(Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO ())"
40:61-40:62::m :: "{v : Discord.Internal.Types.Channel.Message | v == m}"
41:8-41:15::$dApplicative_aevb :: "{v : (GHC.Base.Applicative (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO)) | v == $dApplicative_aevb}"
41:13-41:15::GHC.Tuple.() :: "{v : () | v == ()}"
44:1-44:14::Lib.handleMessage :: "Discord.Internal.Types.Channel.Message -> (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO ())"
44:15-44:16::m :: "Discord.Internal.Types.Channel.Message"
45:8-45:17::nomPrefix :: "Data.Text.Internal.Text -> (GHC.Maybe.Maybe Data.Text.Internal.Text)"
45:20-45:33::lq_anf$##7205759403792858760 :: "Data.Text.Internal.Text"
45:32-45:33::m :: "{v : Discord.Internal.Types.Channel.Message | v == m}"
47:12-47:23::_ :: "{VV : forall a .\n      [a] -> (GHC.Maybe.Maybe (GHC.Base.NonEmpty a)) | VV == nonEmpty}"
47:26-47:39::lq_anf$##7205759403792858764 :: "[Data.Text.Internal.Text]"
47:34-47:39::query :: "{v : Data.Text.Internal.Text | v == query}"
48:22-48:36::Lib.respond :: "(GHC.Base.NonEmpty Data.Text.Internal.Text) -> Discord.Internal.Types.Channel.Message -> (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO ())"
48:30-48:34::args :: "{v : (GHC.Base.NonEmpty Data.Text.Internal.Text) | v == args}"
48:35-48:36::m :: "{v : Discord.Internal.Types.Channel.Message | v == m}"
49:22-49:29::$dApplicative_aev0 :: "{v : (GHC.Base.Applicative (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO)) | v == $dApplicative_aev0}"
49:27-49:29::GHC.Tuple.() :: "{v : () | v == ()}"
50:10-50:17::$dApplicative_aev0 :: "{v : (GHC.Base.Applicative (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO)) | v == $dApplicative_aev0}"
50:15-50:17::GHC.Tuple.() :: "{v : () | v == ()}"
53:5-53:14::nomPrefix :: "Data.Text.Internal.Text -> (GHC.Maybe.Maybe Data.Text.Internal.Text)"
53:15-53:20::input :: "Data.Text.Internal.Text"
54:11-54:18::lowered :: "Data.Text.Internal.Text"
54:21-54:36::_ :: "Data.Text.Internal.Text"
54:31-54:36::input :: "{v : Data.Text.Internal.Text | v == input}"
56:10-56:34::lq_anf$##7205759403792858747 :: "GHC.Types.Bool"
56:23-56:26::lq_anf$##7205759403792858746 :: "Data.Text.Internal.Text"
56:27-56:34::lowered :: "{v : Data.Text.Internal.Text | v == lowered}"
57:9-57:13::_ :: "forall a . a -> (GHC.Maybe.Maybe a)"
57:16-57:28::lq_anf$##7205759403792858759 :: "Data.Text.Internal.Text"
57:23-57:28::input :: "{v : Data.Text.Internal.Text | v == input}"
58:15-58:49::lq_anf$##7205759403792858752 :: "GHC.Types.Bool"
58:28-58:41::lq_anf$##7205759403792858751 :: "Data.Text.Internal.Text"
58:42-58:49::lowered :: "{v : Data.Text.Internal.Text | v == lowered}"
59:9-59:13::_ :: "forall a . a -> (GHC.Maybe.Maybe a)"
59:16-59:31::lq_anf$##7205759403792858757 :: "Data.Text.Internal.Text"
59:23-59:25::lq_anf$##7205759403792858756 :: "GHC.Types.Int"
59:26-59:31::input :: "{v : Data.Text.Internal.Text | v == input}"
61:9-61:16::_ :: "{VV : forall a .\n      {v : (GHC.Maybe.Maybe a) | isJust v <=> false} | VV == Nothing}"
64:1-64:8::Lib.respond :: "(GHC.Base.NonEmpty Data.Text.Internal.Text) -> Discord.Internal.Types.Channel.Message -> (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO ())"
64:44-64:45::m :: "Discord.Internal.Types.Channel.Message"
65:12-65:13::m :: "{v : Discord.Internal.Types.Channel.Message | v == m}"
65:14-65:49::lq_anf$##7205759403792858741 :: "Data.Text.Internal.Text"
67:3-67:11::shuffled :: "[Data.Text.Internal.Text]"
67:15-67:21::_ :: "forall a .\n(GHC.Types.IO a) -> (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO a)"
67:24-67:36::lq_anf$##7205759403792858728 :: "(GHC.Types.IO [Data.Text.Internal.Text])"
67:32-67:36::ds_dgGt :: "{v : [Data.Text.Internal.Text] | len v >= 0}"
68:3-68:59::Lib.sendText :: "Discord.Internal.Types.Channel.Message -> Data.Text.Internal.Text -> (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO ())"
68:12-68:13::m :: "{v : Discord.Internal.Types.Channel.Message | v == m}"
68:14-68:59::lq_anf$##7205759403792858738 :: "Data.Text.Internal.Text"
68:15-68:33::lq_anf$##7205759403792858732 :: "[Data.Text.Internal.Text] -> Data.Text.Internal.Text"
68:29-68:33::lq_anf$##7205759403792858731 :: "Data.Text.Internal.Text"
68:36-68:45::lq_anf$##7205759403792858736 :: "Data.Text.Internal.Text -> Data.Text.Internal.Text"
68:37-68:41::lq_anf$##7205759403792858735 :: "Data.Text.Internal.Text"
68:50-68:58::shuffled :: "{v : [Data.Text.Internal.Text] | len v >= 0\n                                 && v == shuffled}"
69:31-69:60::lq_anf$##7205759403792858713 :: "(Control.Monad.Trans.Maybe.MaybeT (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO) ()) -> (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO ())"
69:38-69:39::m :: "{v : Discord.Internal.Types.Channel.Message | v == m}"
69:40-69:60::lq_anf$##7205759403792858712 :: "Data.Text.Internal.Text"
70:3-70:6::num :: "GHC.Types.Int"
70:10-70:23::lq_anf$##7205759403792858716 :: "(Control.Monad.Trans.Maybe.MaybeT (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO) Data.Text.Internal.Text)"
70:17-70:18::lq_anf$##7205759403792858715 :: "GHC.Types.Int"
70:19-70:23::ds_dgGt :: "{v : [Data.Text.Internal.Text] | len v >= 0}"
70:28-70:34::Lib.intArg :: "Data.Text.Internal.Text -> (Control.Monad.Trans.Maybe.MaybeT (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO) GHC.Types.Int)"
71:3-71:11::shuffled :: "[Data.Text.Internal.Text]"
71:15-71:21::_ :: "forall a .\n(GHC.Types.IO a) -> (Control.Monad.Trans.Maybe.MaybeT (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO) a)"
71:24-71:31::_ :: "{VV : forall a . [a] -> (GHC.Types.IO [a]) | VV == shuffle}"
71:34-71:45::lq_anf$##7205759403792858721 :: "[Data.Text.Internal.Text]"
71:39-71:40::lq_anf$##7205759403792858720 :: "GHC.Types.Int"
71:41-71:45::ds_dgGt :: "{v : [Data.Text.Internal.Text] | len v >= 0}"
72:3-72:14::lq_anf$##7205759403792858723 :: "Data.Text.Internal.Text -> (Control.Monad.Trans.Maybe.MaybeT (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO) ())"
72:13-72:14::m :: "{v : Discord.Internal.Types.Channel.Message | v == m}"
72:17-72:28::formatTeams :: "[[Data.Text.Internal.Text]] -> Data.Text.Internal.Text"
72:31-72:49::lq_anf$##7205759403792858724 :: "[[Data.Text.Internal.Text]]"
72:37-72:40::num :: "{v : GHC.Types.Int | v == num}"
72:41-72:49::shuffled :: "{v : [Data.Text.Internal.Text] | len v >= 0\n                                 && v == shuffled}"
76:5-76:16::formatTeams :: "[[Data.Text.Internal.Text]] -> Data.Text.Internal.Text"
76:17-76:22::teams :: "[[Data.Text.Internal.Text]]"
76:25-76:43::lq_anf$##7205759403792858703 :: "[Data.Text.Internal.Text] -> Data.Text.Internal.Text"
76:39-76:43::lq_anf$##7205759403792858702 :: "Data.Text.Internal.Text"
77:7-77:25::lq_anf$##7205759403792858704 :: "(GHC.Types.Int, [Data.Text.Internal.Text]) -> Data.Text.Internal.Text"
77:15-77:25::formatTeam :: "GHC.Types.Int -> [Data.Text.Internal.Text] -> Data.Text.Internal.Text"
77:30-77:47::lq_anf$##7205759403792858708 :: "{v : [(GHC.Types.Int, [Data.Text.Internal.Text])] | len v <= len teams}"
77:35-77:40::lq_anf$##7205759403792858707 :: "[GHC.Types.Int]"
77:36-77:37::lq_anf$##7205759403792858706 :: "GHC.Types.Int"
77:41-77:46::teams :: "{v : [[Data.Text.Internal.Text]] | len v >= 0\n                                   && v == teams}"
80:5-80:15::formatTeam :: "GHC.Types.Int -> [Data.Text.Internal.Text] -> Data.Text.Internal.Text"
80:16-80:23::teamNum :: "GHC.Types.Int"
80:24-80:31::members :: "[Data.Text.Internal.Text]"
81:7-81:16::lq_anf$##7205759403792858688 :: "Data.Text.Internal.Text"
81:20-81:41::lq_anf$##7205759403792858690 :: "Data.Text.Internal.Text"
81:27-81:41::lq_anf$##7205759403792858689 :: "[GHC.Types.Char]"
81:33-81:40::teamNum :: "{v : GHC.Types.Int | v == teamNum}"
81:45-81:51::lq_anf$##7205759403792858693 :: "Data.Text.Internal.Text"
81:55-81:81::lq_anf$##7205759403792858697 :: "Data.Text.Internal.Text"
81:69-81:73::lq_anf$##7205759403792858696 :: "Data.Text.Internal.Text"
81:74-81:81::members :: "{v : [Data.Text.Internal.Text] | len v >= 0\n                                 && v == members}"
84:5-84:10::chunk :: "forall a . GHC.Types.Int -> [a] -> [[a]]"
84:11-84:20::numChunks :: "GHC.Types.Int"
84:21-84:22::l :: "[a]"
84:25-84:60::chunk' :: "{VV : forall a . GHC.Types.Int -> [a] -> [[a]] | VV == chunk'}"
84:32-84:58::lq_anf$##7205759403792858685 :: "GHC.Types.Int"
84:33-84:41::lq_anf$##7205759403792858684 :: "{v : GHC.Types.Int | v >= 0\n                     && v == len l}"
84:40-84:41::l :: "{v : [a] | len v >= 0\n           && v == l}"
84:48-84:57::numChunks :: "{v : GHC.Types.Int | v == numChunks}"
84:59-84:60::l :: "{v : [a] | len v >= 0\n           && v == l}"
87:5-87:11::chunk' :: "forall a . GHC.Types.Int -> [a] -> [[a]]"
87:19-87:21::_ :: "{VV : forall a <p :: a a -> Bool>.\n      {v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0} | VV == []}"
89:12-89:14::ys :: "[a]"
89:16-89:18::zs :: "[a]"
89:22-89:34::_ :: "([a], [a])"
89:30-89:31::ds_dgGE :: "GHC.Types.Int"
89:32-89:34::ds_dgGF :: "{v : [a] | len v >= 0}"
90:11-90:13::ys :: "{v : [a] | len v >= 0\n           && v == ys}"
90:16-90:27::lq_anf$##7205759403792858681 :: "[[a]]"
90:23-90:24::ds_dgGE :: "GHC.Types.Int"
90:25-90:27::zs :: "{v : [a] | len v >= 0\n           && v == zs}"
92:30-92:54::lq_anf$##7205759403792858656 :: "(Control.Monad.Trans.Maybe.MaybeT (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO) ()) -> (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO ())"
92:37-92:38::m :: "{v : Discord.Internal.Types.Channel.Message | v == m}"
92:39-92:54::lq_anf$##7205759403792858655 :: "Data.Text.Internal.Text"
93:3-93:8::Lib.gaurd :: "GHC.Types.Bool -> (Control.Monad.Trans.Maybe.MaybeT (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO) ())"
93:11-93:22::lq_anf$##7205759403792858657 :: "{v : GHC.Types.Int | v >= 0}"
93:18-93:22::ds_dgGt :: "{v : [Data.Text.Internal.Text] | len v >= 0}"
93:26-93:27::lq_anf$##7205759403792858659 :: "GHC.Types.Int"
94:3-94:14::cardinality :: "GHC.Types.Int"
94:18-94:31::lq_anf$##7205759403792858664 :: "(Control.Monad.Trans.Maybe.MaybeT (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO) Data.Text.Internal.Text)"
94:25-94:26::lq_anf$##7205759403792858663 :: "GHC.Types.Int"
94:27-94:31::ds_dgGt :: "{v : [Data.Text.Internal.Text] | len v >= 0}"
94:36-94:42::Lib.intArg :: "Data.Text.Internal.Text -> (Control.Monad.Trans.Maybe.MaybeT (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO) GHC.Types.Int)"
96:3-96:22::lq_anf$##7205759403792858668 :: "(Control.Monad.Trans.Maybe.MaybeT (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO) ())"
96:10-96:11::m :: "{v : Discord.Internal.Types.Channel.Message | v == m}"
96:12-96:22::lq_anf$##7205759403792858667 :: "Data.Text.Internal.Text"
97:3-97:10::randInt :: "GHC.Types.Int"
97:14-97:20::_ :: "forall a .\n(GHC.Types.IO a) -> (Control.Monad.Trans.Maybe.MaybeT (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO) a)"
97:23-97:49::lq_anf$##7205759403792858673 :: "(GHC.Types.IO GHC.Types.Int)"
97:33-97:49::lq_anf$##7205759403792858672 :: "{v : (GHC.Types.Int, GHC.Types.Int) | x_Tuple22 v == cardinality\n                                      && snd v == cardinality}"
97:34-97:35::lq_anf$##7205759403792858671 :: "GHC.Types.Int"
97:37-97:48::cardinality :: "{v : GHC.Types.Int | v == cardinality}"
98:3-98:14::lq_anf$##7205759403792858674 :: "Data.Text.Internal.Text -> (Control.Monad.Trans.Maybe.MaybeT (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO) ())"
98:13-98:14::m :: "{v : Discord.Internal.Types.Channel.Message | v == m}"
98:17-98:23::Data.Text.pack :: "[GHC.Types.Char] -> Data.Text.Internal.Text"
98:26-98:38::lq_anf$##7205759403792858675 :: "[GHC.Types.Char]"
98:31-98:38::randInt :: "{v : GHC.Types.Int | v == randInt}"
101:1-101:7::Lib.finish :: "Discord.Internal.Types.Channel.Message -> Data.Text.Internal.Text -> (Control.Monad.Trans.Maybe.MaybeT (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO) ()) -> (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO ())"
101:8-101:9::m :: "Discord.Internal.Types.Channel.Message"
101:10-101:17::message :: "Data.Text.Internal.Text"
101:18-101:24::action :: "(Control.Monad.Trans.Maybe.MaybeT (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO) ())"
102:3-102:7::mayb :: "(GHC.Maybe.Maybe ())"
102:11-102:27::_ :: "(Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO (GHC.Maybe.Maybe ()))"
102:21-102:27::action :: "{v : (Control.Monad.Trans.Maybe.MaybeT (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO) ()) | v == action}"
103:3-103:24::lq_anf$##7205759403792857846 :: "(Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO ()) -> (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO ())"
103:8-103:24::lq_anf$##7205759403792857845 :: "GHC.Types.Bool"
103:19-103:23::mayb :: "{v : (GHC.Maybe.Maybe ()) | v == mayb}"
103:27-103:37::lq_anf$##7205759403792857847 :: "Data.Text.Internal.Text -> (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO ())"
103:36-103:37::m :: "{v : Discord.Internal.Types.Channel.Message | v == m}"
103:40-103:54::lq_anf$##7205759403792857850 :: "Data.Text.Internal.Text"
103:58-103:65::message :: "{v : Data.Text.Internal.Text | v == message}"
103:69-103:72::lq_anf$##7205759403792857853 :: "Data.Text.Internal.Text"
104:3-104:10::lq_anf$##7205759403792857858 :: "(Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO ())"
104:8-104:10::GHC.Tuple.() :: "{v : () | v == ()}"
107:1-107:7::Lib.reactD :: "Discord.Internal.Types.Channel.Message -> Data.Text.Internal.Text -> (Control.Monad.Trans.Maybe.MaybeT (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO) ())"
107:8-107:9::m :: "Discord.Internal.Types.Channel.Message"
107:10-107:18::reaction :: "Data.Text.Internal.Text"
108:3-108:7::lq_anf$##7205759403792857829 :: "(Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO (Data.Either.Either Discord.RestCallErrorCode ())) -> (Control.Monad.Trans.Maybe.MaybeT (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO) (Data.Either.Either Discord.RestCallErrorCode ()))"
108:10-108:78::lq_anf$##7205759403792857835 :: "(Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO (Data.Either.Either Discord.RestCallErrorCode ()))"
108:19-108:78::lq_anf$##7205759403792857834 :: "(Discord.Internal.Rest.Channel.ChannelRequest ())"
108:37-108:68::lq_anf$##7205759403792857833 :: "(Discord.Internal.Types.Prelude.Snowflake, Discord.Internal.Types.Prelude.Snowflake)"
108:38-108:54::lq_anf$##7205759403792857831 :: "Discord.Internal.Types.Prelude.Snowflake"
108:53-108:54::m :: "{v : Discord.Internal.Types.Channel.Message | v == m}"
108:56-108:67::lq_anf$##7205759403792857832 :: "Discord.Internal.Types.Prelude.Snowflake"
108:66-108:67::m :: "{v : Discord.Internal.Types.Channel.Message | v == m}"
108:69-108:77::reaction :: "{v : Data.Text.Internal.Text | v == reaction}"
109:3-109:10::lq_anf$##7205759403792857837 :: "(Control.Monad.Trans.Maybe.MaybeT (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO) ())"
109:8-109:10::GHC.Tuple.() :: "{v : () | v == ()}"
112:1-112:10::Lib.sendTextD :: "Discord.Internal.Types.Channel.Message -> Data.Text.Internal.Text -> (Control.Monad.Trans.Maybe.MaybeT (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO) ())"
112:11-112:12::m :: "Discord.Internal.Types.Channel.Message"
112:13-112:14::t :: "Data.Text.Internal.Text"
112:17-112:21::lq_anf$##7205759403792857843 :: "(Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO ()) -> (Control.Monad.Trans.Maybe.MaybeT (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO) ())"
112:24-112:36::lq_anf$##7205759403792857844 :: "(Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO ())"
112:33-112:34::m :: "{v : Discord.Internal.Types.Channel.Message | v == m}"
112:35-112:36::t :: "{v : Data.Text.Internal.Text | v == t}"
115:1-115:9::Lib.sendText :: "Discord.Internal.Types.Channel.Message -> Data.Text.Internal.Text -> (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO ())"
115:10-115:11::m :: "Discord.Internal.Types.Channel.Message"
115:12-115:13::t :: "Data.Text.Internal.Text"
115:16-115:63::lq_anf$##7205759403792857841 :: "(Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO (Data.Either.Either Discord.RestCallErrorCode Discord.Internal.Types.Channel.Message))"
115:25-115:63::lq_anf$##7205759403792857840 :: "(Discord.Internal.Rest.Channel.ChannelRequest Discord.Internal.Types.Channel.Message)"
115:42-115:60::lq_anf$##7205759403792857839 :: "Discord.Internal.Types.Prelude.Snowflake"
115:58-115:59::m :: "{v : Discord.Internal.Types.Channel.Message | v == m}"
115:61-115:62::t :: "{v : Data.Text.Internal.Text | v == t}"
115:67-115:74::lq_anf$##7205759403792857842 :: "(Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO ())"
115:72-115:74::GHC.Tuple.() :: "{v : () | v == ()}"
118:1-118:6::Lib.gaurd :: "GHC.Types.Bool -> (Control.Monad.Trans.Maybe.MaybeT (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO) ())"
118:15-118:22::$dApplicative_aeo3 :: "{v : (GHC.Base.Applicative (Control.Monad.Trans.Maybe.MaybeT (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO))) | v == $dApplicative_aeo3}"
118:20-118:22::GHC.Tuple.() :: "{v : () | v == ()}"
119:15-119:33::lq_anf$##7205759403792857876 :: "{v : (GHC.Maybe.Maybe ()) | isJust v <=> false}"
119:26-119:33::_ :: "{VV : forall a .\n      {v : (GHC.Maybe.Maybe a) | isJust v <=> false} | VV == Nothing}"
122:1-122:7::Lib.getArg :: "GHC.Types.Int -> [Data.Text.Internal.Text] -> (Control.Monad.Trans.Maybe.MaybeT (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO) Data.Text.Internal.Text)"
122:8-122:13::index :: "GHC.Types.Int"
122:14-122:18::args :: "[Data.Text.Internal.Text]"
122:21-122:31::lq_anf$##7205759403792857871 :: "(GHC.Maybe.Maybe Data.Text.Internal.Text) -> (Control.Monad.Trans.Maybe.MaybeT (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO) Data.Text.Internal.Text)"
122:34-122:38::args :: "{v : [Data.Text.Internal.Text] | len v >= 0\n                                 && v == args}"
122:42-122:55::lq_anf$##7205759403792857873 :: "(Data.Text.Internal.Text -> (Data.Functor.Const.Const (TYPE 'GHC.Types.LiftedRep) (Data.Monoid.First Data.Text.Internal.Text) Data.Text.Internal.Text)) -> [Data.Text.Internal.Text] -> (Data.Functor.Const.Const (TYPE 'GHC.Types.LiftedRep) (Data.Monoid.First Data.Text.Internal.Text) [Data.Text.Internal.Text])"
122:50-122:55::index :: "{v : GHC.Types.Int | v == index}"
125:1-125:7::Lib.intArg :: "Data.Text.Internal.Text -> (Control.Monad.Trans.Maybe.MaybeT (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO) GHC.Types.Int)"
125:8-125:11::arg :: "Data.Text.Internal.Text"
125:14-125:24::lq_anf$##7205759403792857862 :: "(GHC.Maybe.Maybe GHC.Types.Int) -> (Control.Monad.Trans.Maybe.MaybeT (Control.Monad.Trans.Reader.ReaderT Discord.Handle.DiscordHandle GHC.Types.IO) GHC.Types.Int)"
125:27-125:38::lq_anf$##7205759403792857863 :: "(Data.Either.Either [GHC.Types.Char] (GHC.Types.Int, Data.Text.Internal.Text))"
125:35-125:38::arg :: "{v : Data.Text.Internal.Text | v == arg}"
125:42-125:48::lq_anf$##7205759403792857864 :: "((GHC.Types.Int, Data.Text.Internal.Text) -> (Data.Functor.Const.Const (TYPE 'GHC.Types.LiftedRep) (Data.Monoid.First GHC.Types.Int) (GHC.Types.Int, Data.Text.Internal.Text))) -> (Data.Either.Either [GHC.Types.Char] (GHC.Types.Int, Data.Text.Internal.Text)) -> (Data.Functor.Const.Const (TYPE 'GHC.Types.LiftedRep) (Data.Monoid.First GHC.Types.Int) (Data.Either.Either [GHC.Types.Char] (GHC.Types.Int, Data.Text.Internal.Text)))"
125:51-125:53::lq_anf$##7205759403792857867 :: "(GHC.Types.Int -> (Data.Functor.Const.Const (TYPE 'GHC.Types.LiftedRep) (Data.Monoid.First GHC.Types.Int) GHC.Types.Int)) -> (GHC.Types.Int, Data.Text.Internal.Text) -> (Data.Functor.Const.Const (TYPE 'GHC.Types.LiftedRep) (Data.Monoid.First GHC.Types.Int) (GHC.Types.Int, Data.Text.Internal.Text))"
128:1-128:11::Lib.hoistMaybe :: "forall a b .\n(GHC.Base.Applicative<[]> a) =>\n(GHC.Maybe.Maybe b) -> (Control.Monad.Trans.Maybe.MaybeT a b)"
128:23-128:27::_ :: "forall a . a -> b a"
131:1-131:8::Lib.fromBot :: "Discord.Internal.Types.Channel.Message -> GHC.Types.Bool"
131:9-131:10::m :: "Discord.Internal.Types.Channel.Message"
131:23-131:40::lq_anf$##7205759403792857877 :: "Discord.Internal.Types.User.User"
131:38-131:39::m :: "{v : Discord.Internal.Types.Channel.Message | v == m}"
134:1-134:8::Lib.shuffle :: "forall a . [a] -> (GHC.Types.IO [a])"
134:15-134:22::lq_anf$##7205759403792857879 :: "{v : [a] | len v == 0}"
134:20-134:22::_ :: "{VV : forall a <p :: a a -> Bool>.\n      {v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | len v == 0} | VV == []}"
135:15-135:23::GHC.Base.$fApplicativeIO :: "{v : (GHC.Base.Applicative GHC.Types.IO) | v == $fApplicativeIO}"
135:20-135:23::lq_anf$##7205759403792857895 :: "{v : [a] | head v == x}"
135:21-135:22::x :: "{VV : a | VV == x}"
137:3-137:11::position :: "GHC.Types.Int"
137:15-137:44::_ :: "(GHC.Types.IO GHC.Types.Int)"
137:25-137:44::lq_anf$##7205759403792857887 :: "(GHC.Types.Int, GHC.Types.Int)"
137:26-137:27::lq_anf$##7205759403792857882 :: "GHC.Types.Int"
137:29-137:39::lq_anf$##7205759403792857883 :: "{v : GHC.Types.Int | v >= 0}"
137:36-137:39::ds_dgBU :: "{v : [a] | len v >= 0}"
137:42-137:43::lq_anf$##7205759403792857885 :: "GHC.Types.Int"
138:8-138:14::before :: "[a]"
138:16-138:21::after :: "[a]"
138:25-138:45::_ :: "({v : [a] | not (position >= 0) => len v == 0}, [a])"
138:33-138:41::position :: "{v : GHC.Types.Int | v == position}"
138:42-138:45::ds_dgBU :: "{v : [a] | len v >= 0}"
139:3-139:4::s :: "[a]"
139:8-139:38::Lib.shuffle :: "forall a . [a] -> (GHC.Types.IO [a])"
139:16-139:38::lq_anf$##7205759403792857890 :: "[a]"
139:17-139:23::before :: "{v : [a] | len v >= 0\n           && v == before}"
139:27-139:37::lq_anf$##7205759403792857889 :: "{v : [a] | len v == len after - 1\n           && v == tail after}"
139:32-139:37::after :: "{v : [a] | len v >= 0\n           && v == after}"
140:3-140:7::_ :: "forall a . a -> (GHC.Types.IO a)"
140:10-140:20::lq_anf$##7205759403792857892 :: "{VV : a | VV == head after}"
140:15-140:20::after :: "{v : [a] | len v >= 0\n           && v == after}"
140:21-140:22::s :: "{v : [a] | len v >= 0\n           && v == s}"